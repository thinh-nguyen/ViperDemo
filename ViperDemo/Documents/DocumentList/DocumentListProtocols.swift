//
//  DocumentListProtocols.swift
//  ViperDemo
//
//  Created Thinh Nguyen on 12/3/17.
//  Copyright © 2017 Prospertin. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: View -
protocol DocumentListViewProtocol: class {
    var presenter: DocumentListPresenterProtocol?  { get set }
    
    /* NOTE that the component on the right must implement this protocol, in this case it's ViewController */
    /* Presenter -> ViewController */
    func showDocuments(with documentUIList: [DocumentUIModel])
    
    //Other functions available to the presenter
    func onError(errorMsg: String)
    
//    func showLoading()
//    
//    func hideLoading()
}

//MARK: Presenter -
protocol DocumentListPresenterProtocol: class {
    var interactor: DocumentListInteractorInputProtocol? { get set }
    
    /* View -> Presenter */ // STARTING POINT from View - viewDidLoad
    func presentDocuments()
    
    func onSelectDocument(selected: DocumentUIModel) // Navigate to detail screen
}

//MARK: Interactor -
protocol DocumentListInteractorInputProtocol: class {
    var presenter: DocumentListInteractorOutputProtocol?  { get set }
    
    /* Presenter -> Interactor */
    func retrieveDocuments(query: DocQuery)
}

protocol DocumentListInteractorOutputProtocol: class {
    
    /* Interactor -> Presenter */
    func didRetrieveDocuments(documents: [DocumentModel])
    
    //Other functions available to the Interactor
    func onError(errorMsg: String)
}

//MARK: Wireframe - Rename ROUTER????
protocol DocumentListWireframeProtocol: class {
    
    /* Presenter -> Router */
    func routeToDocumentScreen(documentUIModel: DocumentUIModel)
}

//MARK: DataManager used by interactor to do network call or get from cache
protocol DataManagerInputProtocol: class {
    var interactor:DataManagerOutputProtocol? { get set }

    /* Interator -> DataManager */
    func retrieveDocuments(payload: [String:Any]) throws
}

protocol DataManagerOutputProtocol: class {
    
    /* DataManager -> Interactor */  /* Interactor must implement this protocol */
    func didRetrieveDocuments(documents: [DocumentModel])
    func onError(errorMsg: String)
}

