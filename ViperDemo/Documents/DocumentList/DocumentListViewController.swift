//
//  DocumentListViewController.swift
//  ViperDemo
//
//  Created Thinh Nguyen on 12/3/17.
//  Copyright © 2017 Prospertin. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import PKHUD

class DocumentListViewController: UIViewController, DocumentListViewProtocol {
    
    @IBOutlet weak var tableView: UITableView!
	var presenter: DocumentListPresenterProtocol?

    var documentUIModels: [DocumentUIModel] = []
    var index: Int = 0
    
	override func viewDidLoad() {
        super.viewDidLoad()
        
        showLoading()
        presenter?.presentDocuments()
    }

    func showDocuments(with documentUIList: [DocumentUIModel]) {
        hideLoading()
        self.documentUIModels = documentUIList
        tableView.reloadData()
    }
    
    func onError(errorMsg: String){
        HUD.flash(.label(errorMsg), delay: 2.0)
    }
    
    func showLoading() {
        HUD.show(.progress)
    }
    
    func hideLoading() {
        HUD.hide()
    }
}

extension DocumentListViewController: UITableViewDataSource, UITableViewDelegate {
    
    public func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: "DocumentCell", for: indexPath) as! DocumentTableViewCell
        
        let doc = documentUIModels[indexPath.row]
        cell.set(forModel: doc)
        
        return cell
    }
    
    public func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return documentUIModels.count
    }
    
    public func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        presenter?.onSelectDocument(selected: documentUIModels[indexPath.row])
    }
}
